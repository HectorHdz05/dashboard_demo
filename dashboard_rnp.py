# -*- coding: utf-8 -*-
"""dashboard_rnp

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gSdG-qMni98Qyapw5HuaYsI57nSF9YcJ
"""

import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import timedelta

# Cargar datos
df = pd.read_csv("seguimiento_alumnos.csv")

# Convertir tiempo a minutos (si está como texto HH:MM:SS)
def time_to_minutes(t):
    try:
        h, m, s = map(int, str(t).split(':'))
        return h * 60 + m + s / 60
    except:
        return None

df['Minutos en plataforma'] = df['Horas'].apply(time_to_minutes)

# Sidebar de selección
st.sidebar.title("🔎 Filtros")
alumno_select = st.sidebar.selectbox("Selecciona un estudiante", df['Nombre alumno'].unique())
filtro = df[df['Nombre alumno'] == alumno_select].iloc[0]

# Layout
st.title("📊 Tablero de seguimiento académico")

# Indicadores
col1, col2, col3 = st.columns(3)
col1.metric("📚 Participaciones", filtro['Participaciones'])
col2.metric("👁️ Elementos vistos", filtro['Vistas'])
col3.metric("⏱️ Minutos en plataforma", round(filtro['Minutos en plataforma'], 1))

col4, col5, col6 = st.columns(3)
col4.metric("📈 % Avance", f"{filtro['%Avance del curso']}%")
col5.metric("✅ Actividades completadas", filtro['Completadas'])
col6.metric("📝 Nota final", round(filtro['Final'], 2))

# Comparativo: Participación vs. Promedio
promedios = df[['Participaciones', 'Vistas', 'Minutos en plataforma', '%Avance del curso', 'Completadas', 'Faltantes', 'Final']].mean()
df_comp = pd.DataFrame({
    "Indicador": ['Participaciones', 'Vistas', 'Minutos en plataforma', '%Avance del curso', 'Completadas', 'Faltantes', 'Final'],
    "Estudiante": [
        filtro['Participaciones'], filtro['Vistas'], filtro['Minutos en plataforma'],
        filtro['%Avance del curso'], filtro['Completadas'], filtro['Faltantes'], filtro['Final']
    ],
    "Promedio grupo": promedios.values
})

st.subheader("📊 Comparativo con el grupo")
fig = px.bar(df_comp, x="Indicador", y=["Estudiante", "Promedio grupo"], barmode="group", text_auto=True)
st.plotly_chart(fig, use_container_width=True)

# Calificaciones por actividad
actividades = [col for col in df.columns if "Actividad" in col or "Quiz" in col or "Fase" in col or "Evidencia" in col]
notas = filtro[actividades]

st.subheader("🧾 Desempeño por actividad")
df_notas = pd.DataFrame({
    "Actividad": notas.index,
    "Calificación": notas.values
}).dropna()

fig2 = px.bar(df_notas, x="Actividad", y="Calificación", color="Calificación", text_auto=True)
st.plotly_chart(fig2, use_container_width=True)

# Comentario automático
st.subheader("💬 Comentario sugerido")
if filtro['Faltantes'] > 5:
    st.warning("Tienes varias actividades pendientes. Te sugerimos priorizar entregas para evitar acumulación.")
elif filtro['Final'] >= 17:
    st.success("¡Excelente trabajo! Tu desempeño general es sobresaliente.")
else:
    st.info("Vas bien, pero aún puedes mejorar tus entregas y participación.")
